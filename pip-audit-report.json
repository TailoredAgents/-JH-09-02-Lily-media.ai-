{"dependencies": [{"name": "aiohappyeyeballs", "version": "2.6.1", "vulns": []}, {"name": "aiohttp", "version": "3.10.11", "vulns": [{"id": "GHSA-9548-qrrj-x5pj", "fix_versions": ["3.12.14"], "aliases": ["CVE-2025-53643"], "description": "### Summary The Python parser is vulnerable to a request smuggling vulnerability due to not parsing trailer sections of an HTTP request.  ### Impact If a pure Python version of aiohttp is installed (i.e. without the usual C extensions) or AIOHTTP_NO_EXTENSIONS is enabled, then an attacker may be able to execute a request smuggling attack to bypass certain firewalls or proxy protections.  ----  Patch: https://github.com/aio-libs/aiohttp/commit/e8d774f635dc6d1cd3174d0e38891da5de0e2b6a"}]}, {"name": "aiosignal", "version": "1.4.0", "vulns": []}, {"name": "alembic", "version": "1.14.0", "vulns": []}, {"name": "amqp", "version": "5.3.1", "vulns": []}, {"name": "annotated-types", "version": "0.7.0", "vulns": []}, {"name": "anyio", "version": "4.10.0", "vulns": []}, {"name": "argon2-cffi", "version": "23.1.0", "vulns": []}, {"name": "argon2-cffi-bindings", "version": "25.1.0", "vulns": []}, {"name": "asyncpg", "version": "0.30.0", "vulns": []}, {"name": "attrs", "version": "25.3.0", "vulns": []}, {"name": "authlib", "version": "1.6.3", "vulns": []}, {"name": "bcrypt", "version": "4.1.2", "vulns": []}, {"name": "beautifulsoup4", "version": "4.12.3", "vulns": []}, {"name": "billiard", "version": "4.2.1", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "build", "version": "1.3.0", "vulns": []}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "celery", "version": "5.4.0", "vulns": []}, {"name": "certifi", "version": "2025.8.3", "vulns": []}, {"name": "cffi", "version": "1.17.1", "vulns": []}, {"name": "charset-normalizer", "version": "3.4.3", "vulns": []}, {"name": "click", "version": "8.2.1", "vulns": []}, {"name": "click-didyoumean", "version": "0.3.1", "vulns": []}, {"name": "click-plugins", "version": "1.1.1.2", "vulns": []}, {"name": "click-repl", "version": "0.3.0", "vulns": []}, {"name": "cryptography", "version": "42.0.8", "vulns": [{"id": "GHSA-h4gh-qq45-vh27", "fix_versions": ["43.0.1"], "aliases": [], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions. "}, {"id": "GHSA-79v4-65xg-pq4g", "fix_versions": ["44.0.1"], "aliases": ["CVE-2024-12797"], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 42.0.0-44.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20250211.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}]}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "distro", "version": "1.9.0", "vulns": []}, {"name": "dnspython", "version": "2.7.0", "vulns": []}, {"name": "dparse", "version": "0.6.4", "vulns": []}, {"name": "ecdsa", "version": "0.19.1", "vulns": [{"id": "GHSA-wj6h-64fc-37mp", "fix_versions": [], "aliases": ["CVE-2024-23342"], "description": "python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix."}]}, {"name": "email-validator", "version": "2.1.0", "vulns": []}, {"name": "fastapi", "version": "0.115.6", "vulns": []}, {"name": "fastapi-users", "version": "13.0.0", "vulns": []}, {"name": "fastapi-users-db-sqlalchemy", "version": "7.0.0", "vulns": []}, {"name": "filelock", "version": "3.19.1", "vulns": []}, {"name": "filetype", "version": "1.2.0", "vulns": []}, {"name": "flower", "version": "2.0.1", "vulns": []}, {"name": "frozenlist", "version": "1.7.0", "vulns": []}, {"name": "greenlet", "version": "3.2.4", "vulns": []}, {"name": "h11", "version": "0.16.0", "vulns": []}, {"name": "httpcore", "version": "1.0.9", "vulns": []}, {"name": "httptools", "version": "0.6.4", "vulns": []}, {"name": "httpx", "version": "0.27.2", "vulns": []}, {"name": "httpx-oauth", "version": "0.14.1", "vulns": []}, {"name": "humanize", "version": "4.13.0", "vulns": []}, {"name": "idna", "version": "3.10", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "jiter", "version": "0.10.0", "vulns": []}, {"name": "joblib", "version": "1.5.2", "vulns": []}, {"name": "kombu", "version": "5.5.4", "vulns": []}, {"name": "license-expression", "version": "30.4.4", "vulns": []}, {"name": "makefun", "version": "1.16.0", "vulns": []}, {"name": "mako", "version": "1.3.10", "vulns": []}, {"name": "markdown-it-py", "version": "4.0.0", "vulns": []}, {"name": "markupsafe", "version": "3.0.2", "vulns": []}, {"name": "marshmallow", "version": "4.0.1", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "msgpack", "version": "1.1.1", "vulns": []}, {"name": "multidict", "version": "6.6.4", "vulns": []}, {"name": "nltk", "version": "3.9.1", "vulns": []}, {"name": "numpy", "version": "2.3.2", "vulns": []}, {"name": "oauthlib", "version": "3.3.1", "vulns": []}, {"name": "openai", "version": "1.75.0", "vulns": []}, {"name": "packageurl-python", "version": "0.17.5", "vulns": []}, {"name": "packaging", "version": "25.0", "vulns": []}, {"name": "passlib", "version": "1.7.4", "vulns": []}, {"name": "pgvector", "version": "0.2.5", "vulns": []}, {"name": "pillow", "version": "11.0.0", "vulns": []}, {"name": "pip", "version": "25.2", "vulns": []}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "pip-tools", "version": "7.5.0", "vulns": []}, {"name": "pipdeptree", "version": "2.28.0", "vulns": []}, {"name": "platformdirs", "version": "4.4.0", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "prometheus-client", "version": "0.20.0", "vulns": []}, {"name": "prometheus-fastapi-instrumentator", "version": "7.1.0", "vulns": []}, {"name": "prompt-toolkit", "version": "3.0.52", "vulns": []}, {"name": "propcache", "version": "0.3.2", "vulns": []}, {"name": "psutil", "version": "7.0.0", "vulns": []}, {"name": "psycopg2-binary", "version": "2.9.10", "vulns": []}, {"name": "pwdlib", "version": "0.2.0", "vulns": []}, {"name": "py-serializable", "version": "2.1.0", "vulns": []}, {"name": "pyasn1", "version": "0.6.1", "vulns": []}, {"name": "pycparser", "version": "2.22", "vulns": []}, {"name": "pydantic", "version": "2.9.2", "vulns": []}, {"name": "pydantic-core", "version": "2.23.4", "vulns": []}, {"name": "pydantic-settings", "version": "2.10.1", "vulns": []}, {"name": "pygments", "version": "2.19.2", "vulns": []}, {"name": "pyjwt", "version": "2.8.0", "vulns": []}, {"name": "pyotp", "version": "2.9.0", "vulns": []}, {"name": "pyparsing", "version": "3.2.3", "vulns": []}, {"name": "pypng", "version": "0.20220715.0", "vulns": []}, {"name": "pyproject-hooks", "version": "1.2.0", "vulns": []}, {"name": "pytest", "version": "8.4.2", "vulns": []}, {"name": "pytest-asyncio", "version": "1.1.0", "vulns": []}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "python-dotenv", "version": "1.1.1", "vulns": []}, {"name": "python-jose", "version": "3.3.0", "vulns": [{"id": "PYSEC-2024-232", "fix_versions": ["3.4.0"], "aliases": ["CVE-2024-33663"], "description": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217."}, {"id": "PYSEC-2024-233", "fix_versions": ["3.4.0"], "aliases": ["CVE-2024-33664"], "description": "python-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319."}]}, {"name": "python-magic", "version": "0.4.27", "vulns": []}, {"name": "python-magic-bin", "version": "0.4.14", "vulns": []}, {"name": "python-multipart", "version": "0.0.9", "vulns": [{"id": "GHSA-59g5-xgcq-4qw3", "fix_versions": ["0.0.18"], "aliases": ["CVE-2024-53981"], "description": "### Summary  When parsing form data, `python-multipart` skips line breaks (CR `\\r` or LF `\\n`) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs.  An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS).  ### Impact  Applications that use `python-multipart` to parse form data (or use frameworks that do so) are affected.   ### Original Report  This security issue was reported by: - GitHub security advisory in Starlette on October 30 by @Startr4ck - Email to `python-multipart` maintainer on October 3 by @mnqazi"}]}, {"name": "pytz", "version": "2025.2", "vulns": []}, {"name": "pyyaml", "version": "6.0.2", "vulns": []}, {"name": "qrcode", "version": "7.4.2", "vulns": []}, {"name": "redis", "version": "5.2.1", "vulns": []}, {"name": "regex", "version": "2025.9.1", "vulns": []}, {"name": "requests", "version": "2.32.3", "vulns": [{"id": "GHSA-9hjg-9r4m-mvj7", "fix_versions": ["2.32.4"], "aliases": ["CVE-2024-47081"], "description": "### Impact  Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.  ### Workarounds For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).  ### References https://github.com/psf/requests/pull/6965 https://seclists.org/fulldisclosure/2025/Jun/2"}]}, {"name": "requests-oauthlib", "version": "1.3.1", "vulns": []}, {"name": "rich", "version": "14.1.0", "vulns": []}, {"name": "rsa", "version": "4.9.1", "vulns": []}, {"name": "ruamel-yaml", "version": "0.18.15", "vulns": []}, {"name": "ruamel-yaml-clib", "version": "0.2.12", "vulns": []}, {"name": "safety", "version": "3.6.1", "vulns": []}, {"name": "safety-schemas", "version": "0.0.14", "vulns": []}, {"name": "sentry-sdk", "version": "2.35.0", "vulns": []}, {"name": "setuptools", "version": "80.9.0", "vulns": []}, {"name": "shellingham", "version": "1.5.4", "vulns": []}, {"name": "six", "version": "1.17.0", "vulns": []}, {"name": "sniffio", "version": "1.3.1", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "soupsieve", "version": "2.8", "vulns": []}, {"name": "sqlalchemy", "version": "2.0.36", "vulns": []}, {"name": "sse-starlette", "version": "2.1.3", "vulns": []}, {"name": "starlette", "version": "0.41.3", "vulns": [{"id": "GHSA-2c2j-9gv5-cj73", "fix_versions": ["0.47.2"], "aliases": ["CVE-2025-54121"], "description": "### Summary When parsing a multi-part form with large files (greater than the [default max spool size](https://github.com/encode/starlette/blob/fa5355442753f794965ae1af0f87f9fec1b9a3de/starlette/formparsers.py#L126)) `starlette` will block the main thread to roll the file over to disk. This blocks the event thread which means we can't accept new connections.  ### Details Please see this discussion for details: https://github.com/encode/starlette/discussions/2927#discussioncomment-13721403. In summary the following UploadFile code (copied from [here](https://github.com/encode/starlette/blob/fa5355442753f794965ae1af0f87f9fec1b9a3de/starlette/datastructures.py#L436C5-L447C14)) has a minor bug. Instead of just checking for `self._in_memory` we should also check if the additional bytes will cause a rollover.  ```python      @property     def _in_memory(self) -> bool:         # check for SpooledTemporaryFile._rolled         rolled_to_disk = getattr(self.file, \"_rolled\", True)         return not rolled_to_disk      async def write(self, data: bytes) -> None:         if self.size is not None:             self.size += len(data)          if self._in_memory:             self.file.write(data)         else:             await run_in_threadpool(self.file.write, data) ```  I have already created a PR which fixes the problem: https://github.com/encode/starlette/pull/2962   ### PoC See the discussion [here](https://github.com/encode/starlette/discussions/2927#discussioncomment-13721403) for steps on how to reproduce.  ### Impact To be honest, very low and not many users will be impacted. Parsing large forms is already CPU intensive so the additional IO block doesn't slow down `starlette` that much on systems with modern HDDs/SSDs. If someone is running on tape they might see a greater impact."}]}, {"name": "stripe", "version": "12.5.0", "vulns": []}, {"name": "structlog", "version": "25.4.0", "vulns": []}, {"name": "tenacity", "version": "9.1.2", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "tomlkit", "version": "0.13.3", "vulns": []}, {"name": "tornado", "version": "6.5.2", "vulns": []}, {"name": "tqdm", "version": "4.67.1", "vulns": []}, {"name": "tweepy", "version": "4.16.0", "vulns": []}, {"name": "typer", "version": "0.17.4", "vulns": []}, {"name": "typing-extensions", "version": "4.15.0", "vulns": []}, {"name": "typing-inspection", "version": "0.4.1", "vulns": []}, {"name": "tzdata", "version": "2025.2", "vulns": []}, {"name": "urllib3", "version": "2.5.0", "vulns": []}, {"name": "uvicorn", "version": "0.32.1", "vulns": []}, {"name": "uvloop", "version": "0.21.0", "vulns": []}, {"name": "vine", "version": "5.1.0", "vulns": []}, {"name": "watchfiles", "version": "1.1.0", "vulns": []}, {"name": "wcwidth", "version": "0.2.13", "vulns": []}, {"name": "websockets", "version": "12.0", "vulns": []}, {"name": "wheel", "version": "0.45.1", "vulns": []}, {"name": "yarl", "version": "1.20.1", "vulns": []}], "fixes": []}
